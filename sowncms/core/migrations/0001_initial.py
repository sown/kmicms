# Generated by Django 4.2.7 on 2023-11-16 23:48

import django.core.validators
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
from django.db import migrations, models

import core.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
    ]

    operations = [
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="This is used in the footer",
                        max_length=63,
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        choices=[("sown", "SOWN"), ("suws", "SUWS")],
                        default="sown",
                        max_length=15,
                    ),
                ),
                (
                    "copyright_start_year",
                    models.PositiveIntegerField(
                        default=core.utils.last_year,
                        help_text="The initial year of copyright for the site.",
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            core.utils.max_value_current_year,
                        ],
                    ),
                ),
                (
                    "main_menu",
                    wagtail.fields.StreamField(
                        [
                            (
                                "page_link",
                                wagtail.blocks.StructBlock(
                                    [("page", wagtail.blocks.PageChooserBlock())],
                                ),
                            ),
                            (
                                "external_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "label",
                                            wagtail.blocks.CharBlock(
                                                label="Label", max_length=55,
                                            ),
                                        ),
                                        ("url", wagtail.blocks.URLBlock(label="URL")),
                                    ],
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "footer_menu",
                    wagtail.fields.StreamField(
                        [
                            (
                                "page_link",
                                wagtail.blocks.StructBlock(
                                    [("page", wagtail.blocks.PageChooserBlock())],
                                ),
                            ),
                            (
                                "external_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "label",
                                            wagtail.blocks.CharBlock(
                                                label="Label", max_length=55,
                                            ),
                                        ),
                                        ("url", wagtail.blocks.URLBlock(label="URL")),
                                    ],
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                ("discord_invite", models.URLField(blank=True)),
                (
                    "github_org",
                    models.CharField(
                        blank=True,
                        max_length=63,
                        verbose_name="GitHub Username / Org Name",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtailcore.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Site Settings",
            },
        ),
    ]
