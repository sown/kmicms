[tool.poetry]
name = "kmicms"
version = "0.1.0"
description = ""
authors = ["Dan Trickey <git@trickey.io>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
wagtail = "~6.3"
django = "~5.1"

# Django Apps
django-compressor = "^4.4"
django-crispy-forms = "^2.1"
django-libsass = "^0.9"
crispy-bootstrap5 = "^2024.10"

# Wagtail Apps
wagtailcodeblock = "^1.29.0.2"

# Other Dependencies
authlib = "^1.3.2"
django-recaptcha = "^4.0.0"
pydantic = "^2.5.3"
requests = "^2.31.0"

# Deployment
gunicorn = "^23"
psycopg = {extras = ["binary", "pool"], version = "^3.1.16"}
redis = "^5.0.1"
setuptools = "^75.1.0"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "^4.2.0"
djhtml = "^3.0.6"
ruff = "^0.6.9"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-django = "^4.8.0"
responses = "^0.25.3"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "A",
    "ANN",
    "B",
    "BLE",
    "C4",
    "COM",
    "DJ",
    "DTZ",
    "E",
    "F",
    "FA",
    "FBT",
    "I",
    "N",
    "S",
    "T10",
    "UP",
    "W",
]
ignore = [
    "ANN101",  # Missing type annotation for `self` in method
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "B009",    # Do not call `getattr` with a constant attribute value.
    "COM812",  # Conflicts with formatter
    "N999",    # Invalid module name
    "S101",    # S101 Use of `assert` detected
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
