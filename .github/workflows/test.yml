name: Tests

on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: pip install poetry
        shell: bash
      - name: Use in-project virtualenv
        run: poetry config virtualenvs.in-project true
        shell: bash
      - uses: actions/cache@v3
        with:
          path: .venv/
          key: ${{ runner.os }}-${{ matrix.python }}-pip-${{ hashFiles('poetry.lock') }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies
        run: poetry install
        shell: bash
      - name: Use the dev configuration
        run: cp kmicms/kmicms/configuration.dev.py kmicms/kmicms/configuration.py
      - name: Check Formatting
        run: make format-check
      - name: Lint
        run: make lint
      - name: Django Static Checks
        run: make check
      - name: Unit tests
        run: make test
